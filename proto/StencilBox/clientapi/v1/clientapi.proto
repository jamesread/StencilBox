syntax = "proto3";

package StencilBox.clientapi.v1;

option go_package = "github.com/jamesread/StencilBox/gen/StencilBox/clientapi/v1;clientapi_pb";

message InitRequest {
}

message InitResponse {
  string version = 1;
}

message Template {
  string name = 1;
  string source = 2;
  string status = 3;
  string documentation_url = 4;
  repeated string build_configs = 5;
  string description = 6;
}

message BuildConfig {
  string name = 1;
  string template = 2;
  string output_dir = 3;
  repeated string repos = 4;
  map<string, string> datafiles = 5;
  string filename = 6;
  string path = 7;
  string error_message = 8;
  bool in_container = 9;
  string datafiles_path = 10;
}

message BuildRequest {
  string config_name = 1;
}

message BuildUpdateResponse {
  string config_name = 1;
  string status = 2;
  bool found = 3;
  string relative_path = 4;
  bool is_error = 5;
  string build_url_base = 6;
  string output_size_human_readable = 7;
  bool in_container = 8;
  string base_output_dir = 9;
  bool is_complete = 10;
}

message GetTemplatesRequest {
}

message GetTemplatesResponse {
  repeated Template templates = 1;
}

message GetStatusRequest {
}

message GetStatusResponse {
  bool in_container = 2;

  string templates_path = 4;

  string output_path = 5;

  string build_configs_dir = 6;
}

message GetBuildConfigsRequest {
}

message GetBuildConfigsResponse {
  repeated BuildConfig build_configs = 1;
  bool can_git_pull = 2;
}

message GetBuildConfigRequest {
  string config_name = 1;
}

message GetBuildConfigResponse {
  BuildConfig build_config = 1;
}

message GetTemplateRequest {
  string template_name = 1;
}

message GetTemplateResponse {
  Template template = 1;
}

service StencilBoxApiService {
  rpc Init(InitRequest) returns (InitResponse);

  rpc StartBuild(BuildRequest) returns (stream BuildUpdateResponse);

  rpc GetTemplates(GetTemplatesRequest) returns (GetTemplatesResponse);

  rpc GetTemplate(GetTemplateRequest) returns (GetTemplateResponse);

  rpc GetStatus(GetStatusRequest) returns (GetStatusResponse);

  rpc GetBuildConfigs(GetBuildConfigsRequest) returns (GetBuildConfigsResponse);

  rpc GetBuildConfig(GetBuildConfigRequest) returns (GetBuildConfigResponse);
}
